(function() {
function createMap(cities) {
  var lightmap = L.tileLayer("https://api.mapbox.com/styles/v1/mapbox/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}", {
    attribution: "Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>",
    maxZoom: 18,
    id: "light-v10",
    accessToken: API_KEY
  });

  var baseMaps = {
    "Light Map": lightmap
  };

  var overlayMaps = {
    "Cities": cities
  };

  var map = L.map("map", {
    center: [40.73, -74.0059],
    zoom: 12,
    layers: [lightmap, cities]
  });

  L.control.layers(baseMaps, overlayMaps, {
    collapsed: false
  }).addTo(map);
}

function createMarkers(response) {

  var cities = response.result;
  var city_markers = []

  for (let city of cities) {
    var city_marker = L.marker([city.lat, city.lon])
      .bindPopup(
          "<h3> Pressure: " + city.press + "</h3>" +
          "<h3> Temperature: " + city.temp + "</h3>" +
          "<h3> Humidity: " + city.hum + "</h3>" +
          "<h3> Cloudiness: " + city.cld + "</h3>" 
        )

    city_markers.push(city_marker)
  }
  console.log(city_markers);

  var markergroup = new L.layerGroup();
  markergroup = L.layerGroup(city_markers)
  markergroup.addTo(map);
  
}

function styleInfo(feature) {
  return {
    opacity: 1, 
    fillOpacity: 1,
    fillColor: getColor(feature.properties.mag),
    color: "#000000",
    radius: getRadius(feature.properties.mag),
    stroke: true, weight: 0.5
  };
}

function getColor(mag) {
  switch (true) {
    case depth > 90:
      return "#ea2c2c";
    case depth > 70:
      return "#ea822c";
    case depth > 50:
      return "#ee9c00";
    case depth > 30:
      return "#eecc00";
    case depth > 10:
      return "#d4ee00";
    default:
      return "#98ee00";
    }

}

function getRadius(magnitude){
  if (magnitude === 0) {
    return 1;
  }

  return magnitude * 4;

}
console.log("Hi")
d3.json("/api/weather.json").then(function(data){
   console.log(data);
  createMarkers(data);
//   var earthquakes = new L.layerGroup();
//   L.geojson(data, 
//     {
//       pointToLayer: function(feature, latlng) {return L.circleMarker(latlng);},
//       style: styleInfo, 
//       onEachFeature: function(feature, layer){layer.bindPopup(feature.properties.mag);}
//     }
//   ).addTo(earthquakes);
//   earthquakes.addTo(map)

}
)
})();